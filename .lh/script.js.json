{
    "sourceFile": "script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 90,
            "patches": [
                {
                    "date": 1690828708265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1690911986152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,10 @@\n function goToTop() {\r\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+  }\r\n+\r\n+  function scrollToElement(selector) {\r\n+    const element = document.querySelector(selector);\r\n+    if (element) {\r\n+      element.scrollIntoView({ behavior: 'smooth' });\r\n+    }\r\n   }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690912190757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,11 @@\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n   }\r\n \r\n   function scrollToElement(selector) {\r\n-    const element = document.querySelector(selector);\r\n-    if (element) {\r\n-      element.scrollIntoView({ behavior: 'smooth' });\r\n-    }\r\n-  }\n\\ No newline at end of file\n+    setTimeout(() => {\r\n+      const element = document.querySelector(selector);\r\n+      if (element) {\r\n+        element.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    }, 100);\r\n+  }  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690912310619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,12 @@\n+function goToTop() {\r\n+    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+  }\r\n+\r\n+  function scrollToElement(selector) {\r\n+    setTimeout(() => {\r\n+      const element = document.querySelector(selector);\r\n+      if (element && element.classList.contains('show')) {\r\n+        element.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    }, 100);\r\n+  }  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690912372202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+function goToTop() {\r\n+    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+  }\r\n+\r\n+  function scrollToElement(selector) {\r\n+    // Add a short delay (e.g., 100ms) to allow the collapsed element to expand\r\n+    setTimeout(() => {\r\n+      const element = document.querySelector(selector);\r\n+      if (element && !element.classList.contains('collapse')) {\r\n+        element.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    }, 100);\r\n+  }  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690913418742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,27 @@\n function goToTop() {\r\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n   }\r\n \r\n-  function scrollToElement(selector) {\r\n-    // Add a short delay (e.g., 100ms) to allow the collapsed element to expand\r\n+  let isStatsExpanded = false;\r\n+  let isLoreExpanded = false;\r\n+  \r\n+  function scrollToElement(selector, expandedState) {\r\n     setTimeout(() => {\r\n       const element = document.querySelector(selector);\r\n-      if (element && !element.classList.contains('collapse')) {\r\n-        element.scrollIntoView({ behavior: 'smooth' });\r\n+      if (element) {\r\n+        const isExpanded = element.classList.contains('show');\r\n+        if (isExpanded && !expandedState) {\r\n+          element.scrollIntoView({ behavior: 'smooth' });\r\n+        }\r\n+        expandedState = isExpanded;\r\n       }\r\n     }, 100);\r\n-  }  \n-function goToTop() {\r\n-    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n   }\r\n-\r\n-  function scrollToElement(selector) {\r\n-    setTimeout(() => {\r\n-      const element = document.querySelector(selector);\r\n-      if (element && element.classList.contains('show')) {\r\n-        element.scrollIntoView({ behavior: 'smooth' });\r\n-      }\r\n-    }, 100);\r\n-  }  \n-function goToTop() {\r\n-    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+  \r\n+  function scrollToStats() {\r\n+    scrollToElement('#collapseStats', isStatsExpanded);\r\n   }\r\n-\r\n-  function scrollToElement(selector) {\r\n-    setTimeout(() => {\r\n-      const element = document.querySelector(selector);\r\n-      if (element) {\r\n-        element.scrollIntoView({ behavior: 'smooth' });\r\n-      }\r\n-    }, 100);\r\n+  \r\n+  function scrollToLore() {\r\n+    scrollToElement('#collapseLore', isLoreExpanded);\r\n   }  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1690913596734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,29 @@\n function goToTop() {\r\n-    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n-  }\r\n+  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+}\r\n \r\n-  let isStatsExpanded = false;\r\n-  let isLoreExpanded = false;\r\n-  \r\n-  function scrollToElement(selector, expandedState) {\r\n-    setTimeout(() => {\r\n-      const element = document.querySelector(selector);\r\n-      if (element) {\r\n-        const isExpanded = element.classList.contains('show');\r\n-        if (isExpanded && !expandedState) {\r\n-          element.scrollIntoView({ behavior: 'smooth' });\r\n-        }\r\n-        expandedState = isExpanded;\r\n+let collapseStates = {\r\n+  statsExpanded: false,\r\n+  loreExpanded: false,\r\n+};\r\n+\r\n+function scrollToElement(selector, state) {\r\n+  setTimeout(() => {\r\n+    const element = document.querySelector(selector);\r\n+    if (element) {\r\n\\ No newline at end of file\n+      const isExpanded = element.classList.contains('show');\r\n+      if (isExpanded && !state.expanded) {\r\n+        element.scrollIntoView({ behavior: 'smooth' });\r\n       }\r\n-    }, 100);\r\n-  }\r\n-  \r\n-  function scrollToStats() {\r\n-    scrollToElement('#collapseStats', isStatsExpanded);\r\n-  }\r\n-  \r\n-  function scrollToLore() {\r\n-    scrollToElement('#collapseLore', isLoreExpanded);\r\n-  }  \n+      state.expanded = isExpanded;\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  scrollToElement('#collapseStats', collapseStates.statsExpanded);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  scrollToElement('#collapseLore', collapseStates.loreExpanded);\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690913733533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,19 +11,19 @@\n   setTimeout(() => {\r\n     const element = document.querySelector(selector);\r\n     if (element) {\r\n       const isExpanded = element.classList.contains('show');\r\n-      if (isExpanded && !state.expanded) {\r\n+      if (isExpanded && !state[selector.slice(1) + \"Expanded\"]) {\r\n         element.scrollIntoView({ behavior: 'smooth' });\r\n       }\r\n-      state.expanded = isExpanded;\r\n+      state[selector.slice(1) + \"Expanded\"] = isExpanded;\r\n     }\r\n   }, 100);\r\n }\r\n \r\n function scrollToStats() {\r\n-  scrollToElement('#collapseStats', collapseStates.statsExpanded);\r\n+  scrollToElement('#collapseStats', collapseStates);\r\n }\r\n \r\n function scrollToLore() {\r\n-  scrollToElement('#collapseLore', collapseStates.loreExpanded);\r\n+  scrollToElement('#collapseLore', collapseStates);\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914026540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,19 @@\n function goToTop() {\r\n   window.scrollTo({ top: 0, behavior: 'smooth' });\r\n }\r\n \r\n-let collapseStates = {\r\n-  statsExpanded: false,\r\n-  loreExpanded: false,\r\n-};\r\n-\r\n-function scrollToElement(selector, state) {\r\n-  setTimeout(() => {\r\n-    const element = document.querySelector(selector);\r\n-    if (element) {\r\n-      const isExpanded = element.classList.contains('show');\r\n-      if (isExpanded && !state[selector.slice(1) + \"Expanded\"]) {\r\n-        element.scrollIntoView({ behavior: 'smooth' });\r\n-      }\r\n-      state[selector.slice(1) + \"Expanded\"] = isExpanded;\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n function scrollToStats() {\r\n-  scrollToElement('#collapseStats', collapseStates);\r\n+  const collapseStats = document.querySelector('#collapseStats');\r\n+  const isStatsExpanded = collapseStats.classList.contains('show');\r\n+  if (isStatsExpanded) {\r\n+    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n }\r\n \r\n function scrollToLore() {\r\n-  scrollToElement('#collapseLore', collapseStates);\r\n+  const collapseLore = document.querySelector('#collapseLore');\r\n+  const isLoreExpanded = collapseLore.classList.contains('show');\r\n+  if (isLoreExpanded) {\r\n+    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914183666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,16 @@\n \r\n function scrollToStats() {\r\n   const collapseStats = document.querySelector('#collapseStats');\r\n   const isStatsExpanded = collapseStats.classList.contains('show');\r\n-  if (isStatsExpanded) {\r\n+  if (!isStatsExpanded) {\r\n     collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n   }\r\n }\r\n \r\n function scrollToLore() {\r\n   const collapseLore = document.querySelector('#collapseLore');\r\n   const isLoreExpanded = collapseLore.classList.contains('show');\r\n-  if (isLoreExpanded) {\r\n+  if (!isLoreExpanded) {\r\n     collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914263181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  const collapseStats = document.querySelector('#collapseStats');\r\n+  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n+  if (!isStatsExpanded) {\r\n+    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  const collapseLore = document.querySelector('#collapseLore');\r\n+  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n+  if (!isLoreExpanded) {\r\n+    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914303040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,36 +3,17 @@\n }\r\n \r\n function scrollToStats() {\r\n   const collapseStats = document.querySelector('#collapseStats');\r\n-  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n+  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'false';\r\n   if (!isStatsExpanded) {\r\n     collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n   }\r\n }\r\n \r\n function scrollToLore() {\r\n   const collapseLore = document.querySelector('#collapseLore');\r\n-  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n+  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'false';\r\n   if (!isLoreExpanded) {\r\n     collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n   }\r\n-}\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  const collapseStats = document.querySelector('#collapseStats');\r\n-  const isStatsExpanded = collapseStats.classList.contains('show');\r\n-  if (!isStatsExpanded) {\r\n-    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  const collapseLore = document.querySelector('#collapseLore');\r\n-  const isLoreExpanded = collapseLore.classList.contains('show');\r\n-  if (!isLoreExpanded) {\r\n-    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914343450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  const collapseStats = document.querySelector('#collapseStats');\r\n+  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n+  if (!isStatsExpanded) {\r\n+    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  const collapseLore = document.querySelector('#collapseLore');\r\n+  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n+  if (!isLoreExpanded) {\r\n+    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690914607301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,23 @@\n+function goToTop() {\r\n+    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n+  }\r\n+\r\n+  function scrollToStats() {\r\n+    setTimeout(() => {\r\n+      const collapseStats = document.querySelector('#collapseStats');\r\n+      const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n+      if (!isStatsExpanded) {\r\n+        collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    }, 100);\r\n+  }\r\n+\r\n+  function scrollToLore() {\r\n+    setTimeout(() => {\r\n+      const collapseLore = document.querySelector('#collapseLore');\r\n+      const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n+      if (!isLoreExpanded) {\r\n+        collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n+      }\r\n+    }, 100);\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690995580399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,8 @@\n+function goBack() {\r\n+  window.history.go.apply(-1);\r\n+}\r\n+\r\n function goToTop() {\r\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n   }\r\n \r\n@@ -19,43 +23,5 @@\n       if (!isLoreExpanded) {\r\n         collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n       }\r\n     }, 100);\r\n-  }\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  const collapseStats = document.querySelector('#collapseStats');\r\n-  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n-  if (!isStatsExpanded) {\r\n-    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  const collapseLore = document.querySelector('#collapseLore');\r\n-  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n-  if (!isLoreExpanded) {\r\n-    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n-}\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: 'smooth' });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  const collapseStats = document.querySelector('#collapseStats');\r\n-  const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'false';\r\n-  if (!isStatsExpanded) {\r\n-    collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  const collapseLore = document.querySelector('#collapseLore');\r\n-  const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'false';\r\n-  if (!isLoreExpanded) {\r\n-    collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n-  }\r\n-}\n\\ No newline at end of file\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690995594643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n function goBack() {\r\n-  window.history.go.apply(-1);\r\n+  window.history.go.(-1);\r\n }\r\n \r\n function goToTop() {\r\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n"
                },
                {
                    "date": 1690995646800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n function goBack() {\r\n-  window.history.go.(-1);\r\n+  window.history.go(-1);\r\n }\r\n \r\n function goToTop() {\r\n     window.scrollTo({ top: 0, behavior: 'smooth' });\r\n"
                },
                {
                    "date": 1691169253261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,26 +2,28 @@\n   window.history.go(-1);\r\n }\r\n \r\n function goToTop() {\r\n-    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n-  }\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n \r\n-  function scrollToStats() {\r\n-    setTimeout(() => {\r\n-      const collapseStats = document.querySelector('#collapseStats');\r\n-      const isStatsExpanded = collapseStats.getAttribute('aria-expanded') === 'true';\r\n-      if (!isStatsExpanded) {\r\n-        collapseStats.scrollIntoView({ behavior: 'smooth' });\r\n-      }\r\n-    }, 100);\r\n-  }\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n\\ No newline at end of file\n+  }, 100);\r\n+}\r\n \r\n-  function scrollToLore() {\r\n-    setTimeout(() => {\r\n-      const collapseLore = document.querySelector('#collapseLore');\r\n-      const isLoreExpanded = collapseLore.getAttribute('aria-expanded') === 'true';\r\n-      if (!isLoreExpanded) {\r\n-        collapseLore.scrollIntoView({ behavior: 'smooth' });\r\n-      }\r\n-    }, 100);\r\n-  }\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n"
                },
                {
                    "date": 1691246832644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,5 +25,31 @@\n     if (!isLoreExpanded) {\r\n       collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n     }\r\n   }, 100);\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+\r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 1.5);\r\n+  const scaleY = originalHeight / (originalHeight * 1.5);\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n"
                },
                {
                    "date": 1691246943441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n   // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 1.5);\r\n-  const scaleY = originalHeight / (originalHeight * 1.5);\r\n+  const scaleX = originalWidth / (originalWidth * 0.5);\r\n+  const scaleY = originalHeight / (originalHeight * 0.5);\r\n \r\n   // Apply the scaling transformation on hover\r\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n@@ -52,4 +52,5 @@\n }\r\n \r\n // Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n+\r\n"
                },
                {
                    "date": 1691246988100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n   // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.5);\r\n-  const scaleY = originalHeight / (originalHeight * 0.5);\r\n+  const scaleX = originalWidth / (originalWidth * 0.25);\r\n+  const scaleY = originalHeight / (originalHeight * 0.25);\r\n \r\n   // Apply the scaling transformation on hover\r\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n"
                },
                {
                    "date": 1691247034033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n   // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.25);\r\n-  const scaleY = originalHeight / (originalHeight * 0.25);\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n   // Apply the scaling transformation on hover\r\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n"
                },
                {
                    "date": 1691248161932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,11 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const imageContainer = document.querySelector('.image-container');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n   const image = imageContainer.querySelector('img');\r\n@@ -42,15 +44,22 @@\n \r\n   // Apply the scaling transformation on hover\r\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n   });\r\n \r\n   // Reset the scaling transformation when the mouse leaves\r\n   image.addEventListener('mouseleave', () => {\r\n     image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n   });\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n+scaleImageOnHover();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691248204580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.image-container');\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n const navbar = document.querySelector('header');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n"
                },
                {
                    "date": 1691248265111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,8 @@\n   }, 100);\r\n }\r\n \r\n const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n@@ -46,9 +45,8 @@\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n     // Bring the scaled image above the navbar and footer\r\n     image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n     footer.style.zIndex = '-1';\r\n   });\r\n \r\n   // Reset the scaling transformation when the mouse leaves\r\n"
                },
                {
                    "date": 1691248287598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n   }, 100);\r\n }\r\n \r\n const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n@@ -45,8 +46,9 @@\n   image.addEventListener('mouseenter', () => {\r\n     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n     // Bring the scaled image above the navbar and footer\r\n     image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n     footer.style.zIndex = '-1';\r\n   });\r\n \r\n   // Reset the scaling transformation when the mouse leaves\r\n"
                },
                {
                    "date": 1691248297757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   }, 100);\r\n }\r\n \r\n const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n+const navbar = document.querySelector('navbar');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n"
                },
                {
                    "date": 1691248307552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n   }, 100);\r\n }\r\n \r\n const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('navbar');\r\n+const navbar = document.querySelector('header');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n"
                },
                {
                    "date": 1691270879581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,25 +27,27 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n-// Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n+  const imageContainer = document.querySelector('.monsterImageContainer');\r\n   const image = imageContainer.querySelector('img');\r\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+  // Function to calculate the maximum scale factor\r\n+  function getMaxScaleFactor() {\r\n+    const screenWidth = window.innerWidth;\r\n+    const screenHeight = window.innerHeight;\r\n+    const maxWidthScale = screenWidth / originalWidth;\r\n+    const maxHeightScale = screenHeight / originalHeight;\r\n+    return Math.min(maxWidthScale, maxHeightScale, 1.25); // 1.25 is the 25% increase you wanted\r\n+  }\r\n \r\n   // Apply the scaling transformation on hover\r\n   image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    const maxScaleFactor = getMaxScaleFactor();\r\n+    image.style.transform = `scale(${maxScaleFactor})`;\r\n     // Bring the scaled image above the navbar and footer\r\n     image.style.zIndex = '1';\r\n     navbar.style.zIndex = '-1';\r\n     footer.style.zIndex = '-1';\r\n@@ -58,8 +60,5 @@\n     image.style.zIndex = 'unset';\r\n     navbar.style.zIndex = 'unset';\r\n     footer.style.zIndex = 'unset';\r\n   });\r\n-}\r\n-\r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691270919147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+function goBack() {\r\n+  window.history.go(-1);\r\n+}\r\n+\r\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+\r\n+\r\n+\r\n+function scaleImageOnHover() {\r\n+  const imageContainer = document.querySelector('.monsterImageContainer');\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Function to calculate the maximum scale factor\r\n+  function getMaxScaleFactor() {\r\n+    const screenWidth = window.innerWidth;\r\n+    const screenHeight = window.innerHeight;\r\n+    const maxWidthScale = screenWidth / originalWidth;\r\n+    const maxHeightScale = screenHeight / originalHeight;\r\n+    return Math.min(maxWidthScale, maxHeightScale, 1.25); // 1.25 is the 25% increase you wanted\r\n+  }\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    const maxScaleFactor = getMaxScaleFactor();\r\n+    image.style.transform = `scale(${maxScaleFactor})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691271041648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,13 @@\n \r\n \r\n \r\n \r\n-function scaleImageOnHover() {\r\n-  const imageContainer = document.querySelector('.monsterImageContainer');\r\n+// Define navbar and footer outside the function\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n+\r\n+function scaleImageOnHover(imageContainer, navbar, footer) {\r\n   const image = imageContainer.querySelector('img');\r\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n@@ -63,69 +66,9 @@\n     image.style.zIndex = 'unset';\r\n     navbar.style.zIndex = 'unset';\r\n     footer.style.zIndex = 'unset';\r\n   });\r\n-}\n-function goBack() {\r\n-  window.history.go(-1);\r\n }\r\n \r\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  setTimeout(() => {\r\n-    const collapseLore = document.querySelector(\"#collapseLore\");\r\n-    const isLoreExpanded =\r\n-      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isLoreExpanded) {\r\n-      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scaleImageOnHover() {\r\n-  const imageContainer = document.querySelector('.monsterImageContainer');\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n-\r\n-  // Function to calculate the maximum scale factor\r\n-  function getMaxScaleFactor() {\r\n-    const screenWidth = window.innerWidth;\r\n-    const screenHeight = window.innerHeight;\r\n-    const maxWidthScale = screenWidth / originalWidth;\r\n-    const maxHeightScale = screenHeight / originalHeight;\r\n-    return Math.min(maxWidthScale, maxHeightScale, 1.25); // 1.25 is the 25% increase you wanted\r\n-  }\r\n-\r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    const maxScaleFactor = getMaxScaleFactor();\r\n-    image.style.transform = `scale(${maxScaleFactor})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n-\r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\n\\ No newline at end of file\n+// Call the function with the elements\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+scaleImageOnHover(imageContainer, navbar, footer);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691271152435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,10 @@\n \r\n \r\n \r\n \r\n-// Define navbar and footer outside the function\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n-function scaleImageOnHover(imageContainer, navbar, footer) {\r\n+function scaleImageOnHover() {\r\n+  const imageContainer = document.querySelector('.monsterImageContainer');\r\n   const image = imageContainer.querySelector('img');\r\n   const originalWidth = image.naturalWidth;\r\n   const originalHeight = image.naturalHeight;\r\n \r\n@@ -66,9 +63,5 @@\n     image.style.zIndex = 'unset';\r\n     navbar.style.zIndex = 'unset';\r\n     footer.style.zIndex = 'unset';\r\n   });\r\n-}\r\n-\r\n-// Call the function with the elements\r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-scaleImageOnHover(imageContainer, navbar, footer);\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691271164067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,48 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n \r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n \r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n+\r\n+\r\n+\r\n+\r\n+\r\n function scaleImageOnHover() {\r\n   const imageContainer = document.querySelector('.monsterImageContainer');\r\n   const image = imageContainer.querySelector('img');\r\n   const originalWidth = image.naturalWidth;\r\n"
                },
                {
                    "date": 1691271187092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,44 +61,5 @@\n   });\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-function scaleImageOnHover() {\r\n-  const imageContainer = document.querySelector('.monsterImageContainer');\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n-\r\n-  // Function to calculate the maximum scale factor\r\n-  function getMaxScaleFactor() {\r\n-    const screenWidth = window.innerWidth;\r\n-    const screenHeight = window.innerHeight;\r\n-    const maxWidthScale = screenWidth / originalWidth;\r\n-    const maxHeightScale = screenHeight / originalHeight;\r\n-    return Math.min(maxWidthScale, maxHeightScale, 1.25); // 1.25 is the 25% increase you wanted\r\n-  }\r\n-\r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    const maxScaleFactor = getMaxScaleFactor();\r\n-    image.style.transform = `scale(${maxScaleFactor})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n-\r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\n\\ No newline at end of file\n+scaleImageOnHover();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691708874726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,19 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n+function scrollToStats2() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n function scrollToLore() {\r\n   setTimeout(() => {\r\n     const collapseLore = document.querySelector(\"#collapseLore\");\r\n     const isLoreExpanded =\r\n"
                },
                {
                    "date": 1691709623595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,5 +72,7 @@\n   });\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n-scaleImageOnHover();\n\\ No newline at end of file\n+scaleImageOnHover();\r\n+\r\n+$('.carousel').carousel()\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691714960010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+function goBack() {\r\n+  window.history.go(-1);\r\n+}\r\n+\r\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToStats2() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n+\r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n+\r\n+$(document).ready(function() {\r\n+  $('#carouselExampleSlidesOnly').carousel();\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1691771475677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,85 +74,21 @@\n \r\n // Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n \r\n-$(document).ready(function() {\r\n-  $('#carouselExampleSlidesOnly').carousel();\r\n-});\n-function goBack() {\r\n-  window.history.go(-1);\r\n-}\r\n+const images = [\"images/aboleth.jpg\", \"images/angels.webp\", \"images/animatedObjects.webp\"];\r\n+let currentIndex = 0;\r\n \r\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n-}\r\n+function changeImage() {\r\n+  const image = document.getElementById(\"slideshowImage\");\r\n+  image.style.opacity = 0; // Start fading out\r\n \r\n-function scrollToStats() {\r\n   setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n+    currentIndex = (currentIndex + 1) % images.length;\r\n+    image.src = images[currentIndex];\r\n+    image.style.opacity = 1; // Start fading in\r\n+  }, 1000); // Change image after 1 second\r\n }\r\n \r\n-function scrollToStats2() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  setTimeout(() => {\r\n-    const collapseLore = document.querySelector(\"#collapseLore\");\r\n-    const isLoreExpanded =\r\n-      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isLoreExpanded) {\r\n-      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n-// Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n-\r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n-\r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n-\r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n\\ No newline at end of file\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\r\n-\r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n-$('.carousel').carousel()\n+// Initial call to start the slideshow\r\n+changeImage();\r\n+setInterval(changeImage, 5000); // Repeat every 5 seconds\r\n"
                },
                {
                    "date": 1691771897583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,22 +73,4 @@\n }\r\n \r\n // Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n-\r\n-const images = [\"images/aboleth.jpg\", \"images/angels.webp\", \"images/animatedObjects.webp\"];\r\n-let currentIndex = 0;\r\n-\r\n-function changeImage() {\r\n-  const image = document.getElementById(\"slideshowImage\");\r\n-  image.style.opacity = 0; // Start fading out\r\n-\r\n-  setTimeout(() => {\r\n-    currentIndex = (currentIndex + 1) % images.length;\r\n-    image.src = images[currentIndex];\r\n-    image.style.opacity = 1; // Start fading in\r\n-  }, 1000); // Change image after 1 second\r\n-}\r\n-\r\n-// Initial call to start the slideshow\r\n-changeImage();\r\n-setInterval(changeImage, 5000); // Repeat every 5 seconds\r\n"
                },
                {
                    "date": 1691771922743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,5 +72,5 @@\n   });\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n+scaleImageOnHover();\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692039017528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,5 +72,37 @@\n   });\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n-scaleImageOnHover();\n\\ No newline at end of file\n+scaleImageOnHover();\r\n+\r\n+document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n+  event.preventDefault(); // Prevent the form from submitting normally\r\n+  \r\n+  const numDice = parseInt(document.getElementById('dieNum').value);\r\n+  const dieType = document.getElementById('dieType').value;\r\n+  const modifierType = document.getElementById('modifierType').value;\r\n+  const modifierNumber = parseInt(document.getElementById('modifierNumber').value);\r\n+\r\n+  let totalRoll = 0;\r\n+\r\n+  for (let i = 0; i < numDice; i++) {\r\n+      const rollResult = Math.floor(Math.random() * parseInt(dieType.slice(1)) + 1);\r\n+      totalRoll += rollResult;\r\n+  }\r\n+\r\n+  if (modifierType === 'plus') {\r\n+      totalRoll += modifierNumber;\r\n+  } else if (modifierType === 'minus') {\r\n+      totalRoll -= modifierNumber;\r\n+  }\r\n+\r\n+  const resultElement = document.getElementById('result');\r\n+  \r\n+  const alertDiv = document.createElement('div');\r\n+  alertDiv.className = 'alert alert-dark';\r\n+  alertDiv.role = 'alert';\r\n+  alertDiv.textContent = `Total Roll: ${totalRoll}`;\r\n+\r\n+  resultElement.innerHTML = ''; // Clear any previous content\r\n+  resultElement.appendChild(alertDiv);\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692039720953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n \r\n   let totalRoll = 0;\r\n \r\n   for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * parseInt(dieType.slice(1)) + 1);\r\n+      const rollResult = Math.floor(Math.random() * parseInt(dieType) + 1);\r\n       totalRoll += rollResult;\r\n   }\r\n \r\n   if (modifierType === 'plus') {\r\n@@ -95,14 +95,12 @@\n   } else if (modifierType === 'minus') {\r\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n-  const resultElement = document.getElementById('result');\r\n-  \r\n-  const alertDiv = document.createElement('div');\r\n-  alertDiv.className = 'alert alert-dark';\r\n-  alertDiv.role = 'alert';\r\n-  alertDiv.textContent = `Total Roll: ${totalRoll}`;\r\n+  // Update the result section with the calculated totalRoll\r\n+  const resultValueElement = document.getElementById('resultValue');\r\n+  resultValueElement.textContent = totalRoll;\r\n \r\n-  resultElement.innerHTML = ''; // Clear any previous content\r\n-  resultElement.appendChild(alertDiv);\r\n+  // Show the result section if it was hidden\r\n+  const resultSection = document.getElementById('resultSection');\r\n+  resultSection.classList.add('show');\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692039865433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,12 +95,12 @@\n   } else if (modifierType === 'minus') {\r\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n-  // Update the result section with the calculated totalRoll\r\n+  // Update the result value\r\n   const resultValueElement = document.getElementById('resultValue');\r\n   resultValueElement.textContent = totalRoll;\r\n \r\n-  // Show the result section if it was hidden\r\n+  // Show the result section\r\n   const resultSection = document.getElementById('resultSection');\r\n   resultSection.classList.add('show');\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692040719973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,16 +78,16 @@\n document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n-  const dieType = document.getElementById('dieType').value;\r\n+  const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n   const modifierNumber = parseInt(document.getElementById('modifierNumber').value);\r\n \r\n   let totalRoll = 0;\r\n \r\n   for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * parseInt(dieType) + 1);\r\n+      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n       totalRoll += rollResult;\r\n   }\r\n \r\n   if (modifierType === 'plus') {\r\n@@ -95,12 +95,8 @@\n   } else if (modifierType === 'minus') {\r\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n-  // Update the result value\r\n-  const resultValueElement = document.getElementById('resultValue');\r\n-  resultValueElement.textContent = totalRoll;\r\n-\r\n-  // Show the result section\r\n-  const resultSection = document.getElementById('resultSection');\r\n-  resultSection.classList.add('show');\r\n+  // Display the calculated total roll in the \"diceAnswer\" paragraph\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.textContent = `Total Roll: ${totalRoll}`;\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692041061352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,39 +38,39 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n // Function to scale the image when hovered\r\n function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n+  const imageContainer = document.querySelector('.monsterImageContainer');\r\n+  \r\n+  if (imageContainer) {\r\n+    const image = imageContainer.querySelector('img');\r\n+    const originalWidth = image.naturalWidth;\r\n+    const originalHeight = image.naturalHeight;\r\n \r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+    // Calculate the scaling factors based on the image dimensions\r\n+    const scaleX = originalWidth / (originalWidth * 0.75);\r\n+    const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n+    // Apply the scaling transformation on hover\r\n+    image.addEventListener('mouseenter', () => {\r\n+      image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+      // Bring the scaled image above the navbar and footer\r\n+      image.style.zIndex = '1';\r\n+      navbar.style.zIndex = '-1';\r\n+      footer.style.zIndex = '-1';\r\n+    });\r\n \r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n+    // Reset the scaling transformation when the mouse leaves\r\n+    image.addEventListener('mouseleave', () => {\r\n+      image.style.transform = 'scale(1)';\r\n+      // Reset the z-index back to default\r\n+      image.style.zIndex = 'unset';\r\n+      navbar.style.zIndex = 'unset';\r\n+      footer.style.zIndex = 'unset';\r\n+    });\r\n+  }\r\n }\r\n \r\n // Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n"
                },
                {
                    "date": 1692041142451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+function goBack() {\r\n+  window.history.go(-1);\r\n+}\r\n+\r\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToStats2() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n+\r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n+\r\n+document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n+  event.preventDefault(); // Prevent the form from submitting normally\r\n+  \r\n+  const numDice = parseInt(document.getElementById('dieNum').value);\r\n+  const dieType = parseInt(document.getElementById('dieType').value);\r\n+  const modifierType = document.getElementById('modifierType').value;\r\n+  const modifierNumber = parseInt(document.getElementById('modifierNumber').value);\r\n+\r\n+  let totalRoll = 0;\r\n+\r\n+  for (let i = 0; i < numDice; i++) {\r\n+      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n+      totalRoll += rollResult;\r\n+  }\r\n+\r\n+  if (modifierType === 'plus') {\r\n+      totalRoll += modifierNumber;\r\n+  } else if (modifierType === 'minus') {\r\n+      totalRoll -= modifierNumber;\r\n+  }\r\n+\r\n+  // Display the calculated total roll in the \"diceAnswer\" paragraph\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.textContent = `Total Roll: ${totalRoll}`;\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692041172878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,38 +43,38 @@\n const navbar = document.querySelector('header');\r\n const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n+// function scaleImageOnHover() {\r\n+//   const image = imageContainer.querySelector('img');\r\n+//   const originalWidth = image.naturalWidth;\r\n+//   const originalHeight = image.naturalHeight;\r\n \r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+//   // Calculate the scaling factors based on the image dimensions\r\n+//   const scaleX = originalWidth / (originalWidth * 0.75);\r\n+//   const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n+//   // Apply the scaling transformation on hover\r\n+//   image.addEventListener('mouseenter', () => {\r\n+//     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+//     // Bring the scaled image above the navbar and footer\r\n+//     image.style.zIndex = '1';\r\n+//     navbar.style.zIndex = '-1';\r\n+//     footer.style.zIndex = '-1';\r\n+//   });\r\n \r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\r\n+//   // Reset the scaling transformation when the mouse leaves\r\n+//   image.addEventListener('mouseleave', () => {\r\n+//     image.style.transform = 'scale(1)';\r\n+//     // Reset the z-index back to default\r\n+//     image.style.zIndex = 'unset';\r\n+//     navbar.style.zIndex = 'unset';\r\n+//     footer.style.zIndex = 'unset';\r\n+//   });\r\n+// }\r\n \r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n+// // Call the function to enable the scaling effect\r\n+// scaleImageOnHover();\r\n \r\n document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n@@ -98,107 +98,5 @@\n \r\n   // Display the calculated total roll in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = `Total Roll: ${totalRoll}`;\r\n-});\n-function goBack() {\r\n-  window.history.go(-1);\r\n-}\r\n-\r\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToStats2() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  setTimeout(() => {\r\n-    const collapseLore = document.querySelector(\"#collapseLore\");\r\n-    const isLoreExpanded =\r\n-      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isLoreExpanded) {\r\n-      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-// Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const imageContainer = document.querySelector('.monsterImageContainer');\r\n-  \r\n-  if (imageContainer) {\r\n-    const image = imageContainer.querySelector('img');\r\n-    const originalWidth = image.naturalWidth;\r\n-    const originalHeight = image.naturalHeight;\r\n-\r\n-    // Calculate the scaling factors based on the image dimensions\r\n-    const scaleX = originalWidth / (originalWidth * 0.75);\r\n-    const scaleY = originalHeight / (originalHeight * 0.75);\r\n-\r\n-    // Apply the scaling transformation on hover\r\n-    image.addEventListener('mouseenter', () => {\r\n-      image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-      // Bring the scaled image above the navbar and footer\r\n-      image.style.zIndex = '1';\r\n-      navbar.style.zIndex = '-1';\r\n-      footer.style.zIndex = '-1';\r\n-    });\r\n-\r\n-    // Reset the scaling transformation when the mouse leaves\r\n-    image.addEventListener('mouseleave', () => {\r\n-      image.style.transform = 'scale(1)';\r\n-      // Reset the z-index back to default\r\n-      image.style.zIndex = 'unset';\r\n-      navbar.style.zIndex = 'unset';\r\n-      footer.style.zIndex = 'unset';\r\n-    });\r\n-  }\r\n-}\r\n-\r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n-document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n-  event.preventDefault(); // Prevent the form from submitting normally\r\n-  \r\n-  const numDice = parseInt(document.getElementById('dieNum').value);\r\n-  const dieType = parseInt(document.getElementById('dieType').value);\r\n-  const modifierType = document.getElementById('modifierType').value;\r\n-  const modifierNumber = parseInt(document.getElementById('modifierNumber').value);\r\n-\r\n-  let totalRoll = 0;\r\n-\r\n-  for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n-      totalRoll += rollResult;\r\n-  }\r\n-\r\n-  if (modifierType === 'plus') {\r\n-      totalRoll += modifierNumber;\r\n-  } else if (modifierType === 'minus') {\r\n-      totalRoll -= modifierNumber;\r\n-  }\r\n-\r\n-  // Display the calculated total roll in the \"diceAnswer\" paragraph\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = `Total Roll: ${totalRoll}`;\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692041268004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,11 +38,11 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n+// const imageContainer = document.querySelector('.monsterImageContainer');\r\n+// const navbar = document.querySelector('header');\r\n+// const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n // function scaleImageOnHover() {\r\n //   const image = imageContainer.querySelector('img');\r\n"
                },
                {
                    "date": 1692041320551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n // // Call the function to enable the scaling effect\r\n // scaleImageOnHover();\r\n \r\n-document.getElementById('diceForm').addEventListener('submit', function(event) {\r\n+document.getElementById('submit').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n"
                },
                {
                    "date": 1692041386714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n // // Call the function to enable the scaling effect\r\n // scaleImageOnHover();\r\n \r\n-document.getElementById('submit').addEventListener('submit', function(event) {\r\n+document.getElementById('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n"
                },
                {
                    "date": 1692041455668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n // // Call the function to enable the scaling effect\r\n // scaleImageOnHover();\r\n \r\n-document.getElementById('form').addEventListener('submit', function(event) {\r\n+document.getElementById('diceButton').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n"
                },
                {
                    "date": 1692041594435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n \r\n // // Call the function to enable the scaling effect\r\n // scaleImageOnHover();\r\n \r\n-document.getElementById('diceButton').addEventListener('submit', function(event) {\r\n+document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n"
                },
                {
                    "date": 1692041640111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,43 +38,43 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-// const imageContainer = document.querySelector('.monsterImageContainer');\r\n-// const navbar = document.querySelector('header');\r\n-// const footer = document.querySelector('footer');\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n-// function scaleImageOnHover() {\r\n-//   const image = imageContainer.querySelector('img');\r\n-//   const originalWidth = image.naturalWidth;\r\n-//   const originalHeight = image.naturalHeight;\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n \r\n-//   // Calculate the scaling factors based on the image dimensions\r\n-//   const scaleX = originalWidth / (originalWidth * 0.75);\r\n-//   const scaleY = originalHeight / (originalHeight * 0.75);\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n-//   // Apply the scaling transformation on hover\r\n-//   image.addEventListener('mouseenter', () => {\r\n-//     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-//     // Bring the scaled image above the navbar and footer\r\n-//     image.style.zIndex = '1';\r\n-//     navbar.style.zIndex = '-1';\r\n-//     footer.style.zIndex = '-1';\r\n-//   });\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n \r\n-//   // Reset the scaling transformation when the mouse leaves\r\n-//   image.addEventListener('mouseleave', () => {\r\n-//     image.style.transform = 'scale(1)';\r\n-//     // Reset the z-index back to default\r\n-//     image.style.zIndex = 'unset';\r\n-//     navbar.style.zIndex = 'unset';\r\n-//     footer.style.zIndex = 'unset';\r\n-//   });\r\n-// }\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n \r\n-// // Call the function to enable the scaling effect\r\n-// scaleImageOnHover();\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n \r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n"
                },
                {
                    "date": 1692041679115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,43 +38,43 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n+// const imageContainer = document.querySelector('.monsterImageContainer');\r\n+// const navbar = document.querySelector('header');\r\n+// const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n+// function scaleImageOnHover() {\r\n+//   const image = imageContainer.querySelector('img');\r\n+//   const originalWidth = image.naturalWidth;\r\n+//   const originalHeight = image.naturalHeight;\r\n \r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+//   // Calculate the scaling factors based on the image dimensions\r\n+//   const scaleX = originalWidth / (originalWidth * 0.75);\r\n+//   const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n+//   // Apply the scaling transformation on hover\r\n+//   image.addEventListener('mouseenter', () => {\r\n+//     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+//     // Bring the scaled image above the navbar and footer\r\n+//     image.style.zIndex = '1';\r\n+//     navbar.style.zIndex = '-1';\r\n+//     footer.style.zIndex = '-1';\r\n+//   });\r\n \r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\r\n+//   // Reset the scaling transformation when the mouse leaves\r\n+//   image.addEventListener('mouseleave', () => {\r\n+//     image.style.transform = 'scale(1)';\r\n+//     // Reset the z-index back to default\r\n+//     image.style.zIndex = 'unset';\r\n+//     navbar.style.zIndex = 'unset';\r\n+//     footer.style.zIndex = 'unset';\r\n+//   });\r\n+// }\r\n \r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n+// // Call the function to enable the scaling effect\r\n+// scaleImageOnHover();\r\n \r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n"
                },
                {
                    "date": 1692041848291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,43 +38,43 @@\n     }\r\n   }, 100);\r\n }\r\n \r\n-// const imageContainer = document.querySelector('.monsterImageContainer');\r\n-// const navbar = document.querySelector('header');\r\n-// const footer = document.querySelector('footer');\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n \r\n // Function to scale the image when hovered\r\n-// function scaleImageOnHover() {\r\n-//   const image = imageContainer.querySelector('img');\r\n-//   const originalWidth = image.naturalWidth;\r\n-//   const originalHeight = image.naturalHeight;\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n \r\n-//   // Calculate the scaling factors based on the image dimensions\r\n-//   const scaleX = originalWidth / (originalWidth * 0.75);\r\n-//   const scaleY = originalHeight / (originalHeight * 0.75);\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n \r\n-//   // Apply the scaling transformation on hover\r\n-//   image.addEventListener('mouseenter', () => {\r\n-//     image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-//     // Bring the scaled image above the navbar and footer\r\n-//     image.style.zIndex = '1';\r\n-//     navbar.style.zIndex = '-1';\r\n-//     footer.style.zIndex = '-1';\r\n-//   });\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n \r\n-//   // Reset the scaling transformation when the mouse leaves\r\n-//   image.addEventListener('mouseleave', () => {\r\n-//     image.style.transform = 'scale(1)';\r\n-//     // Reset the z-index back to default\r\n-//     image.style.zIndex = 'unset';\r\n-//     navbar.style.zIndex = 'unset';\r\n-//     footer.style.zIndex = 'unset';\r\n-//   });\r\n-// }\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n \r\n-// // Call the function to enable the scaling effect\r\n-// scaleImageOnHover();\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n \r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n"
                },
                {
                    "date": 1692053461893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,10 @@\n \r\n // Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n \r\n+\r\n+\r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n@@ -95,8 +97,15 @@\n   } else if (modifierType === 'minus') {\r\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n-  // Display the calculated total roll in the \"diceAnswer\" paragraph\r\n+  // Construct the message including the modifier information if applicable\r\n+  let message = `Rolling ${numDice} ${dieType}`;\r\n+  if (modifierType !== 'none') {\r\n+      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+  }\r\n+  message += ` for a total roll of: ${totalRoll}`;\r\n+\r\n+  // Display the calculated total roll and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = `Total Roll: ${totalRoll}`;\r\n+  diceAnswerElement.textContent = message;\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692053571310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,17 @@\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n-  const modifierNumber = parseInt(document.getElementById('modifierNumber').value);\r\n+  const modifierNumberInput = document.getElementById('modifierNumber');\r\n+  \r\n+  let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n+  // Parse modifierNumber only if a modifier is selected\r\n+  if (modifierType !== 'none') {\r\n+      modifierNumber = parseInt(modifierNumberInput.value);\r\n+  }\r\n+\r\n   let totalRoll = 0;\r\n \r\n   for (let i = 0; i < numDice; i++) {\r\n       const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n"
                },
                {
                    "date": 1692053674485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n   // Construct the message including the modifier information if applicable\r\n-  let message = `Rolling ${numDice} ${dieType}`;\r\n+  let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n   message += ` for a total roll of: ${totalRoll}`;\r\n"
                },
                {
                    "date": 1692054563203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n   const modifierNumberInput = document.getElementById('modifierNumber');\r\n+  var diceSound = new Audio('/sounds/dice.mp3');\r\n   \r\n   let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n   // Parse modifierNumber only if a modifier is selected\r\n@@ -114,5 +115,6 @@\n \r\n   // Display the calculated total roll and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n+  diceSound.play();\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692054802369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n   const modifierNumberInput = document.getElementById('modifierNumber');\r\n-  var diceSound = new Audio('/sounds/dice.mp3');\r\n+  var diceSound = new Audio(src='/sounds/dice.mp3');\r\n   \r\n   let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n   // Parse modifierNumber only if a modifier is selected\r\n"
                },
                {
                    "date": 1692054949747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,14 @@\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n   message += ` for a total roll of: ${totalRoll}`;\r\n \r\n+  var diceSound = new Audio();\r\n+  diceSound.src = '/sounds/dice.mp3';\r\n+\r\n+\r\n   // Display the calculated total roll and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n   diceSound.play();\r\n+  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692055039043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n   const modifierNumberInput = document.getElementById('modifierNumber');\r\n-  var diceSound = new Audio(src='/sounds/dice.mp3');\r\n   \r\n   let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n   // Parse modifierNumber only if a modifier is selected\r\n"
                },
                {
                    "date": 1692055283389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n   }\r\n   message += ` for a total roll of: ${totalRoll}`;\r\n \r\n   var diceSound = new Audio();\r\n-  diceSound.src = '/sounds/dice.mp3';\r\n+  diceSound.src = 'sounds/dice.mp3';\r\n \r\n \r\n   // Display the calculated total roll and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n"
                },
                {
                    "date": 1692055683663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n \r\n   // Construct the message including the modifier information if applicable\r\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n-      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+      message += ` with a ${modifierType} ${modifierNumber} modifier`;\r\n   }\r\n   message += ` for a total roll of: ${totalRoll}`;\r\n \r\n   var diceSound = new Audio();\r\n"
                },
                {
                    "date": 1692055783786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,14 @@\n   if (modifierType !== 'none') {\r\n       modifierNumber = parseInt(modifierNumberInput.value);\r\n   }\r\n \r\n+  const rolls = []; // To store individual roll results\r\n   let totalRoll = 0;\r\n \r\n   for (let i = 0; i < numDice; i++) {\r\n       const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n+      rolls.push(rollResult); // Store individual roll result\r\n       totalRoll += rollResult;\r\n   }\r\n \r\n   if (modifierType === 'plus') {\r\n@@ -104,21 +106,15 @@\n   } else if (modifierType === 'minus') {\r\n       totalRoll -= modifierNumber;\r\n   }\r\n \r\n-  // Construct the message including the modifier information if applicable\r\n+  // Construct the message including individual rolls and modifier information if applicable\r\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n-      message += ` with a ${modifierType} ${modifierNumber} modifier`;\r\n+      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n-  message += ` for a total roll of: ${totalRoll}`;\r\n+  message += ` for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n \r\n-  var diceSound = new Audio();\r\n-  diceSound.src = 'sounds/dice.mp3';\r\n-\r\n-\r\n-  // Display the calculated total roll and modifier message in the \"diceAnswer\" paragraph\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n-  diceSound.play();\r\n-  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692055935982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,13 @@\n   if (modifierType !== 'none') {\r\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n   message += ` for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+  var diceSound = new Audio();\r\n+  diceSound.src = 'sounds/dice.mp3';\r\n \r\n+\r\n   // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n+  diceSound.play();\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692056157856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,14 +111,26 @@\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n-  message += ` for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.textContent = message;\r\n   var diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n \r\n+  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n+  let currentDelay = 500;\r\n+  rolls.forEach((roll, index) => {\r\n+    setTimeout(() => {\r\n+      diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.slice(0, index + 1).join(', ')} (Total: ${totalRoll})`;\r\n+    }, currentDelay);\r\n+    currentDelay += 500; // Increment the delay for the next roll\r\n+  });\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n+  // Display the final total roll after all individual rolls\r\n+  setTimeout(() => {\r\n+    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+  }, currentDelay);\r\n   diceSound.play();\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = message;\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692056190007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,12 +125,13 @@\n     setTimeout(() => {\r\n       diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.slice(0, index + 1).join(', ')} (Total: ${totalRoll})`;\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n+    diceSound.play();\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n-  diceSound.play();\r\n+  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692056215922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,13 +125,14 @@\n     setTimeout(() => {\r\n       diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.slice(0, index + 1).join(', ')} (Total: ${totalRoll})`;\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n-    diceSound.play();\r\n+    \r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n+    diceSound.play();\r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692056294441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,16 +123,17 @@\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n       diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.slice(0, index + 1).join(', ')} (Total: ${totalRoll})`;\r\n+      diceSound.play();\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n     \r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    diceSound.play();\r\n+    \r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692056541493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,18 +122,17 @@\n   // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n-      diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.slice(0, index + 1).join(', ')} (Total: ${totalRoll})`;\r\n-      diceSound.play();\r\n+      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n-    \r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    \r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692065226044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,24 +115,26 @@\n \r\n   // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n-  var diceSound = new Audio();\r\n-  diceSound.src = 'sounds/dice.mp3';\r\n \r\n   // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n       const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n       diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n+      diceAnswerElement.classList.add('animate__animated', 'animate__tada'); // Add 'tada' animation class\r\n+      setTimeout(() => {\r\n+        diceAnswerElement.classList.remove('animate__animated', 'animate__tada'); // Remove animation class after animation\r\n+      }, 1000); // Animation duration is around 1 second\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    diceSound.play(); // Play sound effect for the total\r\n   }, currentDelay);\r\n-  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692065350169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,136 @@\n+function goBack() {\r\n+  window.history.go(-1);\r\n+}\r\n+\r\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToStats2() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n+\r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n+\r\n+\r\n+\r\n+document.querySelector('form').addEventListener('submit', function(event) {\r\n+  event.preventDefault(); // Prevent the form from submitting normally\r\n+  \r\n+  const numDice = parseInt(document.getElementById('dieNum').value);\r\n+  const dieType = parseInt(document.getElementById('dieType').value);\r\n+  const modifierType = document.getElementById('modifierType').value;\r\n+  const modifierNumberInput = document.getElementById('modifierNumber');\r\n+  \r\n+  let modifierNumber = 0; // Default value if no modifier is selected\r\n+\r\n+  // Parse modifierNumber only if a modifier is selected\r\n+  if (modifierType !== 'none') {\r\n+      modifierNumber = parseInt(modifierNumberInput.value);\r\n+  }\r\n+\r\n+  const rolls = []; // To store individual roll results\r\n+  let totalRoll = 0;\r\n+\r\n+  for (let i = 0; i < numDice; i++) {\r\n+      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n+      rolls.push(rollResult); // Store individual roll result\r\n+      totalRoll += rollResult;\r\n+  }\r\n+\r\n+  if (modifierType === 'plus') {\r\n+      totalRoll += modifierNumber;\r\n+  } else if (modifierType === 'minus') {\r\n+      totalRoll -= modifierNumber;\r\n+  }\r\n+\r\n+  // Construct the message including individual rolls and modifier information if applicable\r\n+  let message = `Rolling ${numDice} D${dieType}`;\r\n+  if (modifierType !== 'none') {\r\n+      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+  }\r\n+\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.textContent = message;\r\n+\r\n+  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n+  let currentDelay = 500;\r\n+  rolls.forEach((roll, index) => {\r\n+    setTimeout(() => {\r\n+      const currentRolls = rolls.slice(0, index + 1).map(roll => `<span class=\"animate__animated animate__tada\">${roll}</span>`).join(', ');\r\n+      diceAnswerElement.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n+      diceSound.play(); // Play sound effect with each roll\r\n+    }, currentDelay);\r\n+    currentDelay += 500; // Increment the delay for the next roll\r\n+  });\r\n+\r\n+  // Display the final total roll after all individual rolls\r\n+  setTimeout(() => {\r\n+    diceAnswerElement.innerHTML = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    diceSound.play(); // Play sound effect for the total\r\n+  }, currentDelay);\r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692065376524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,162 +115,24 @@\n \r\n   // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n   diceAnswerElement.textContent = message;\r\n+  var diceSound = new Audio();\r\n+  diceSound.src = 'sounds/dice.mp3';\r\n \r\n   // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-  let currentDelay = 500;\r\n+   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n-      const currentRolls = rolls.slice(0, index + 1).map(roll => `<span class=\"animate__animated animate__tada\">${roll}</span>`).join(', ');\r\n-      diceAnswerElement.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n-      diceSound.play(); // Play sound effect with each roll\r\n-    }, currentDelay);\r\n-    currentDelay += 500; // Increment the delay for the next roll\r\n-  });\r\n-\r\n-  // Display the final total roll after all individual rolls\r\n-  setTimeout(() => {\r\n-    diceAnswerElement.innerHTML = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-    diceSound.play(); // Play sound effect for the total\r\n-  }, currentDelay);\r\n-});\n-function goBack() {\r\n-  window.history.go(-1);\r\n-}\r\n-\r\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToStats2() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  setTimeout(() => {\r\n-    const collapseLore = document.querySelector(\"#collapseLore\");\r\n-    const isLoreExpanded =\r\n-      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isLoreExpanded) {\r\n-      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n-// Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n-\r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n-\r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n-\r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\r\n-\r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n-\r\n-\r\n-document.querySelector('form').addEventListener('submit', function(event) {\r\n-  event.preventDefault(); // Prevent the form from submitting normally\r\n-  \r\n-  const numDice = parseInt(document.getElementById('dieNum').value);\r\n-  const dieType = parseInt(document.getElementById('dieType').value);\r\n-  const modifierType = document.getElementById('modifierType').value;\r\n-  const modifierNumberInput = document.getElementById('modifierNumber');\r\n-  \r\n-  let modifierNumber = 0; // Default value if no modifier is selected\r\n-\r\n-  // Parse modifierNumber only if a modifier is selected\r\n-  if (modifierType !== 'none') {\r\n-      modifierNumber = parseInt(modifierNumberInput.value);\r\n-  }\r\n-\r\n-  const rolls = []; // To store individual roll results\r\n-  let totalRoll = 0;\r\n-\r\n-  for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n-      rolls.push(rollResult); // Store individual roll result\r\n-      totalRoll += rollResult;\r\n-  }\r\n-\r\n-  if (modifierType === 'plus') {\r\n-      totalRoll += modifierNumber;\r\n-  } else if (modifierType === 'minus') {\r\n-      totalRoll -= modifierNumber;\r\n-  }\r\n-\r\n-  // Construct the message including individual rolls and modifier information if applicable\r\n-  let message = `Rolling ${numDice} D${dieType}`;\r\n-  if (modifierType !== 'none') {\r\n-      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n-  }\r\n-\r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = message;\r\n-\r\n-  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-  let currentDelay = 500;\r\n-  rolls.forEach((roll, index) => {\r\n-    setTimeout(() => {\r\n       const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n       diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n-      diceAnswerElement.classList.add('animate__animated', 'animate__tada'); // Add 'tada' animation class\r\n-      setTimeout(() => {\r\n-        diceAnswerElement.classList.remove('animate__animated', 'animate__tada'); // Remove animation class after animation\r\n-      }, 1000); // Animation duration is around 1 second\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n     diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-    diceSound.play(); // Play sound effect for the total\r\n   }, currentDelay);\r\n+  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692065955217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,27 +112,33 @@\n   if (modifierType !== 'none') {\r\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = message;\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the list group\r\n+  const diceResultsElement = document.getElementById('diceResults');\r\n+  diceResultsElement.innerHTML = ''; // Clear previous results\r\n   var diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n \r\n   // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-   let currentDelay = 500;\r\n+  let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n       const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      const li = document.createElement('li');\r\n+      li.classList.add('list-group-item');\r\n+      li.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      diceResultsElement.appendChild(li);\r\n       diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    const li = document.createElement('li');\r\n+    li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n+    li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    diceResultsElement.appendChild(li);\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692065990746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,33 +112,27 @@\n   if (modifierType !== 'none') {\r\n       message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n   }\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the list group\r\n-  const diceResultsElement = document.getElementById('diceResults');\r\n-  diceResultsElement.innerHTML = ''; // Clear previous results\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.textContent = message;\r\n   var diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n \r\n   // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-  let currentDelay = 500;\r\n+   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n       const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      const li = document.createElement('li');\r\n-      li.classList.add('list-group-item');\r\n-      li.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n-      diceResultsElement.appendChild(li);\r\n+      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    const li = document.createElement('li');\r\n-    li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n-    li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-    diceResultsElement.appendChild(li);\r\n+    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692066054689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n \r\n   // Construct the message including individual rolls and modifier information if applicable\r\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n-      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+      message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n   }\r\n \r\n   // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n"
                },
                {
                    "date": 1692067260008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+function goBack() {\r\n+  window.history.go(-1);\r\n+}\r\n+\r\n+function goToTop() {\r\n+  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n+}\r\n+\r\n+function scrollToStats() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToStats2() {\r\n+  setTimeout(() => {\r\n+    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n+    const isStatsExpanded =\r\n+      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isStatsExpanded) {\r\n+      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+function scrollToLore() {\r\n+  setTimeout(() => {\r\n+    const collapseLore = document.querySelector(\"#collapseLore\");\r\n+    const isLoreExpanded =\r\n+      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n+    if (!isLoreExpanded) {\r\n+      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n+    }\r\n+  }, 100);\r\n+}\r\n+\r\n+const imageContainer = document.querySelector('.monsterImageContainer');\r\n+const navbar = document.querySelector('header');\r\n+const footer = document.querySelector('footer');\r\n+\r\n+// Function to scale the image when hovered\r\n+function scaleImageOnHover() {\r\n+  const image = imageContainer.querySelector('img');\r\n+  const originalWidth = image.naturalWidth;\r\n+  const originalHeight = image.naturalHeight;\r\n+\r\n+  // Calculate the scaling factors based on the image dimensions\r\n+  const scaleX = originalWidth / (originalWidth * 0.75);\r\n+  const scaleY = originalHeight / (originalHeight * 0.75);\r\n+\r\n+  // Apply the scaling transformation on hover\r\n+  image.addEventListener('mouseenter', () => {\r\n+    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n+    // Bring the scaled image above the navbar and footer\r\n+    image.style.zIndex = '1';\r\n+    navbar.style.zIndex = '-1';\r\n+    footer.style.zIndex = '-1';\r\n+  });\r\n+\r\n+  // Reset the scaling transformation when the mouse leaves\r\n+  image.addEventListener('mouseleave', () => {\r\n+    image.style.transform = 'scale(1)';\r\n+    // Reset the z-index back to default\r\n+    image.style.zIndex = 'unset';\r\n+    navbar.style.zIndex = 'unset';\r\n+    footer.style.zIndex = 'unset';\r\n+  });\r\n+}\r\n+\r\n+// Call the function to enable the scaling effect\r\n+scaleImageOnHover();\r\n+\r\n+\r\n+\r\n+document.querySelector('form').addEventListener('submit', function(event) {\r\n+  event.preventDefault(); // Prevent the form from submitting normally\r\n+  \r\n+  const numDice = parseInt(document.getElementById('dieNum').value);\r\n+  const dieType = parseInt(document.getElementById('dieType').value);\r\n+  const modifierType = document.getElementById('modifierType').value;\r\n+  const modifierNumberInput = document.getElementById('modifierNumber');\r\n+  \r\n+  let modifierNumber = 0; // Default value if no modifier is selected\r\n+\r\n+  // Parse modifierNumber only if a modifier is selected\r\n+  if (modifierType !== 'none') {\r\n+      modifierNumber = parseInt(modifierNumberInput.value);\r\n+  }\r\n+\r\n+  const rolls = []; // To store individual roll results\r\n+  let totalRoll = 0;\r\n+\r\n+  for (let i = 0; i < numDice; i++) {\r\n+      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n+      rolls.push(rollResult); // Store individual roll result\r\n+      totalRoll += rollResult;\r\n+  }\r\n+\r\n+  if (modifierType === 'plus') {\r\n+      totalRoll += modifierNumber;\r\n+  } else if (modifierType === 'minus') {\r\n+      totalRoll -= modifierNumber;\r\n+  }\r\n+\r\n+  // Construct the message including individual rolls and modifier information if applicable\r\n+  let message = `Rolling ${numDice} D${dieType}`;\r\n+  if (modifierType !== 'none') {\r\n+      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+  }\r\n+\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the list group\r\n+  const diceAnswerElement = document.getElementById('diceAnswer');\r\n+  diceAnswerElement.innerHTML = ''; // Clear previous results\r\n+  var diceSound = new Audio();\r\n+  diceSound.src = 'sounds/dice.mp3';\r\n+\r\n+  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n+  let currentDelay = 500;\r\n+  rolls.forEach((roll, index) => {\r\n+    setTimeout(() => {\r\n+      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+      const li = document.createElement('li');\r\n+      li.classList.add('list-group-item');\r\n+      li.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      diceAnswerElement.appendChild(li);\r\n+      diceSound.play(); // Play sound effect with each roll\r\n+    }, currentDelay);\r\n+    currentDelay += 500; // Increment the delay for the next roll\r\n+  });\r\n+\r\n+  // Display the final total roll after all individual rolls\r\n+  setTimeout(() => {\r\n+    const li = document.createElement('li');\r\n+    li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n+    li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    diceAnswerElement.appendChild(li);\r\n+  }, currentDelay);\r\n+  \r\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692067393283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,165 +118,11 @@\n   diceAnswerElement.innerHTML = ''; // Clear previous results\r\n   var diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n \r\n-  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-  let currentDelay = 500;\r\n-  rolls.forEach((roll, index) => {\r\n-    setTimeout(() => {\r\n-      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      const li = document.createElement('li');\r\n-      li.classList.add('list-group-item');\r\n-      li.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n-      diceAnswerElement.appendChild(li);\r\n-      diceSound.play(); // Play sound effect with each roll\r\n-    }, currentDelay);\r\n-    currentDelay += 500; // Increment the delay for the next roll\r\n-  });\r\n-\r\n-  // Display the final total roll after all individual rolls\r\n-  setTimeout(() => {\r\n-    const li = document.createElement('li');\r\n-    li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n-    li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-    diceAnswerElement.appendChild(li);\r\n-  }, currentDelay);\r\n+  // Display the final total roll including individual rolls\r\n+  const li = document.createElement('li');\r\n+  li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n+  li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+  diceAnswerElement.appendChild(li);\r\n   \r\n-});\n-function goBack() {\r\n-  window.history.go(-1);\r\n-}\r\n-\r\n-function goToTop() {\r\n-  window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n-}\r\n-\r\n-function scrollToStats() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToStats2() {\r\n-  setTimeout(() => {\r\n-    const collapseStats = document.querySelector(\"#collapseStats2\");\r\n-    const isStatsExpanded =\r\n-      collapseStats.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isStatsExpanded) {\r\n-      collapseStats.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-function scrollToLore() {\r\n-  setTimeout(() => {\r\n-    const collapseLore = document.querySelector(\"#collapseLore\");\r\n-    const isLoreExpanded =\r\n-      collapseLore.getAttribute(\"aria-expanded\") === \"true\";\r\n-    if (!isLoreExpanded) {\r\n-      collapseLore.scrollIntoView({ behavior: \"smooth\" });\r\n-    }\r\n-  }, 100);\r\n-}\r\n-\r\n-const imageContainer = document.querySelector('.monsterImageContainer');\r\n-const navbar = document.querySelector('header');\r\n-const footer = document.querySelector('footer');\r\n-\r\n-// Function to scale the image when hovered\r\n-function scaleImageOnHover() {\r\n-  const image = imageContainer.querySelector('img');\r\n-  const originalWidth = image.naturalWidth;\r\n-  const originalHeight = image.naturalHeight;\r\n-\r\n-  // Calculate the scaling factors based on the image dimensions\r\n-  const scaleX = originalWidth / (originalWidth * 0.75);\r\n-  const scaleY = originalHeight / (originalHeight * 0.75);\r\n-\r\n-  // Apply the scaling transformation on hover\r\n-  image.addEventListener('mouseenter', () => {\r\n-    image.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n-    // Bring the scaled image above the navbar and footer\r\n-    image.style.zIndex = '1';\r\n-    navbar.style.zIndex = '-1';\r\n-    footer.style.zIndex = '-1';\r\n-  });\r\n-\r\n-  // Reset the scaling transformation when the mouse leaves\r\n-  image.addEventListener('mouseleave', () => {\r\n-    image.style.transform = 'scale(1)';\r\n-    // Reset the z-index back to default\r\n-    image.style.zIndex = 'unset';\r\n-    navbar.style.zIndex = 'unset';\r\n-    footer.style.zIndex = 'unset';\r\n-  });\r\n-}\r\n-\r\n-// Call the function to enable the scaling effect\r\n-scaleImageOnHover();\r\n-\r\n-\r\n-\r\n-document.querySelector('form').addEventListener('submit', function(event) {\r\n-  event.preventDefault(); // Prevent the form from submitting normally\r\n-  \r\n-  const numDice = parseInt(document.getElementById('dieNum').value);\r\n-  const dieType = parseInt(document.getElementById('dieType').value);\r\n-  const modifierType = document.getElementById('modifierType').value;\r\n-  const modifierNumberInput = document.getElementById('modifierNumber');\r\n-  \r\n-  let modifierNumber = 0; // Default value if no modifier is selected\r\n-\r\n-  // Parse modifierNumber only if a modifier is selected\r\n-  if (modifierType !== 'none') {\r\n-      modifierNumber = parseInt(modifierNumberInput.value);\r\n-  }\r\n-\r\n-  const rolls = []; // To store individual roll results\r\n-  let totalRoll = 0;\r\n-\r\n-  for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n-      rolls.push(rollResult); // Store individual roll result\r\n-      totalRoll += rollResult;\r\n-  }\r\n-\r\n-  if (modifierType === 'plus') {\r\n-      totalRoll += modifierNumber;\r\n-  } else if (modifierType === 'minus') {\r\n-      totalRoll -= modifierNumber;\r\n-  }\r\n-\r\n-  // Construct the message including individual rolls and modifier information if applicable\r\n-  let message = `Rolling ${numDice} D${dieType}`;\r\n-  if (modifierType !== 'none') {\r\n-      message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n-  }\r\n-\r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = message;\r\n-  var diceSound = new Audio();\r\n-  diceSound.src = 'sounds/dice.mp3';\r\n-\r\n-  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-   let currentDelay = 500;\r\n-  rolls.forEach((roll, index) => {\r\n-    setTimeout(() => {\r\n-      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n-      diceSound.play(); // Play sound effect with each roll\r\n-    }, currentDelay);\r\n-    currentDelay += 500; // Increment the delay for the next roll\r\n-  });\r\n-\r\n-  // Display the final total roll after all individual rolls\r\n-  setTimeout(() => {\r\n-    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-  }, currentDelay);\r\n-  \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692067455296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,20 +109,30 @@\n \r\n   // Construct the message including individual rolls and modifier information if applicable\r\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n-      message += ` with a ${modifierType} modifier of ${modifierNumber}`;\r\n+      message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n   }\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the list group\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n   const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.innerHTML = ''; // Clear previous results\r\n+  diceAnswerElement.textContent = message;\r\n   var diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n \r\n-  // Display the final total roll including individual rolls\r\n-  const li = document.createElement('li');\r\n-  li.classList.add('list-group-item', 'active'); // Apply \"active\" class for highlighting\r\n-  li.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-  diceAnswerElement.appendChild(li);\r\n+  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n+   let currentDelay = 500;\r\n+  rolls.forEach((roll, index) => {\r\n+    setTimeout(() => {\r\n+      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      diceSound.play(); // Play sound effect with each roll\r\n+    }, currentDelay);\r\n+    currentDelay += 500; // Increment the delay for the next roll\r\n+  });\r\n+\r\n+  // Display the final total roll after all individual rolls\r\n+  setTimeout(() => {\r\n+    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+  }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692068253056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,28 +111,32 @@\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n       message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n   }\r\n+  \r\n+  // Create a new <p> element to display the current roll results\r\n+  const rollResultParagraph = document.createElement('p');\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"diceAnswer\" paragraph\r\n-  const diceAnswerElement = document.getElementById('diceAnswer');\r\n-  diceAnswerElement.textContent = message;\r\n-  var diceSound = new Audio();\r\n-  diceSound.src = 'sounds/dice.mp3';\r\n+  // Display the calculated total roll, individual rolls, and modifier message in the \"rollResultParagraph\"\r\n+  rollResultParagraph.textContent = message;\r\n \r\n-  // Display individual rolls one by one with a delay of 500 milliseconds (half a second)\r\n-   let currentDelay = 500;\r\n+  // Append the current roll results to the diceResults container\r\n+  const diceResultsContainer = document.getElementById('diceResults');\r\n+  diceResultsContainer.appendChild(rollResultParagraph);\r\n+  \r\n+  // Display individual rolls one by one with a delay, appending to the rollResultParagraph\r\n+  let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n       const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      diceAnswerElement.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      rollResultParagraph.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    diceAnswerElement.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    rollResultParagraph.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692068316152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,12 @@\n \r\n   // Append the current roll results to the diceResults container\r\n   const diceResultsContainer = document.getElementById('diceResults');\r\n   diceResultsContainer.appendChild(rollResultParagraph);\r\n+\r\n+  // Create an audio element for the dice sound\r\n+  const diceSound = new Audio();\r\n+  diceSound.src = 'sounds/dice.mp3';\r\n   \r\n   // Display individual rolls one by one with a delay, appending to the rollResultParagraph\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n"
                },
                {
                    "date": 1692068478085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,17 +130,17 @@\n   // Display individual rolls one by one with a delay, appending to the rollResultParagraph\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n-      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      rollResultParagraph.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n+      const currentRolls = rolls.map((r, i) => (i === index) ? (r === 1 ? `<span class=\"red\">${r}</span>` : (r === 20 ? `<span class=\"green\">${r}</span>` : r)) : r).join(', ');\r\n+      rollResultParagraph.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    rollResultParagraph.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    rollResultParagraph.innerHTML = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692068623988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,17 +130,17 @@\n   // Display individual rolls one by one with a delay, appending to the rollResultParagraph\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n     setTimeout(() => {\r\n-      const currentRolls = rolls.map((r, i) => (i === index) ? (r === 1 ? `<span class=\"red\">${r}</span>` : (r === 20 ? `<span class=\"green\">${r}</span>` : r)) : r).join(', ');\r\n-      rollResultParagraph.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n+      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+      rollResultParagraph.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n       diceSound.play(); // Play sound effect with each roll\r\n     }, currentDelay);\r\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    rollResultParagraph.innerHTML = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+    rollResultParagraph.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n   }, currentDelay);\r\n   \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692206664068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,13 +71,12 @@\n     footer.style.zIndex = 'unset';\r\n   });\r\n }\r\n \r\n-// Call the function to enable the scaling effect\r\n scaleImageOnHover();\r\n \r\n \r\n-\r\n+// Dice rolling function\r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n   \r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n@@ -139,8 +138,17 @@\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n   setTimeout(() => {\r\n-    rollResultParagraph.textContent = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n-  }, currentDelay);\r\n-  \r\n+    let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+\r\n+    if (numDice === 1 && dieType === 20) {\r\n+        if (rolls[0] === 1) {\r\n+            finalMessage += \" - Critical Failure!\";\r\n+        } else if (rolls[0] === 20) {\r\n+            finalMessage += \" - Critical Success!\";\r\n+        }\r\n+    }\r\n+\r\n+    rollResultParagraph.textContent = finalMessage;\r\n+}, currentDelay); \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692207010510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,11 +142,11 @@\n     let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n \r\n     if (numDice === 1 && dieType === 20) {\r\n         if (rolls[0] === 1) {\r\n-            finalMessage += \" - Critical Failure!\";\r\n+            finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n         } else if (rolls[0] === 20) {\r\n-            finalMessage += \" - Critical Success!\";\r\n+            finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n         }\r\n     }\r\n \r\n     rollResultParagraph.textContent = finalMessage;\r\n"
                },
                {
                    "date": 1692207150305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,18 +137,25 @@\n     currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n-  setTimeout(() => {\r\n-    let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+setTimeout(() => {\r\n+  let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n \r\n-    if (numDice === 1 && dieType === 20) {\r\n-        if (rolls[0] === 1) {\r\n-            finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n-        } else if (rolls[0] === 20) {\r\n-            finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n-        }\r\n-    }\r\n+  if (numDice === 1 && dieType === 20) {\r\n+      if (rolls[0] === 1) {\r\n+          const criticalFailureSpan = document.createElement('span');\r\n+          criticalFailureSpan.className = 'critical-failure';\r\n+          criticalFailureSpan.textContent = ' - Critical Failure!';\r\n+          rollResultParagraph.appendChild(criticalFailureSpan);\r\n+      } else if (rolls[0] === 20) {\r\n+          const criticalSuccessSpan = document.createElement('span');\r\n+          criticalSuccessSpan.className = 'critical-success';\r\n+          criticalSuccessSpan.textContent = ' - Critical Success!';\r\n+          rollResultParagraph.appendChild(criticalSuccessSpan);\r\n+      }\r\n+  }\r\n \r\n-    rollResultParagraph.textContent = finalMessage;\r\n-}, currentDelay); \r\n+  rollResultParagraph.innerHTML = finalMessage;\r\n+}, currentDelay);\r\n+\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692207287618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,14 +142,14 @@\n   let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n \r\n   if (numDice === 1 && dieType === 20) {\r\n       if (rolls[0] === 1) {\r\n-          const criticalFailureSpan = document.createElement('span');\r\n+          const criticalFailureSpan = document.createElement('p');\r\n           criticalFailureSpan.className = 'critical-failure';\r\n           criticalFailureSpan.textContent = ' - Critical Failure!';\r\n           rollResultParagraph.appendChild(criticalFailureSpan);\r\n       } else if (rolls[0] === 20) {\r\n-          const criticalSuccessSpan = document.createElement('span');\r\n+          const criticalSuccessSpan = document.createElement('p');\r\n           criticalSuccessSpan.className = 'critical-success';\r\n           criticalSuccessSpan.textContent = ' - Critical Success!';\r\n           rollResultParagraph.appendChild(criticalSuccessSpan);\r\n       }\r\n"
                },
                {
                    "date": 1692207613498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,16 @@\n \r\n scaleImageOnHover();\r\n \r\n \r\n-// Dice rolling function\r\n document.querySelector('form').addEventListener('submit', function(event) {\r\n   event.preventDefault(); // Prevent the form from submitting normally\r\n-  \r\n+\r\n   const numDice = parseInt(document.getElementById('dieNum').value);\r\n   const dieType = parseInt(document.getElementById('dieType').value);\r\n   const modifierType = document.getElementById('modifierType').value;\r\n   const modifierNumberInput = document.getElementById('modifierNumber');\r\n-  \r\n+\r\n   let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n   // Parse modifierNumber only if a modifier is selected\r\n   if (modifierType !== 'none') {\r\n@@ -110,52 +109,47 @@\n   let message = `Rolling ${numDice} D${dieType}`;\r\n   if (modifierType !== 'none') {\r\n       message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n   }\r\n-  \r\n+\r\n   // Create a new <p> element to display the current roll results\r\n   const rollResultParagraph = document.createElement('p');\r\n \r\n-  // Display the calculated total roll, individual rolls, and modifier message in the \"rollResultParagraph\"\r\n-  rollResultParagraph.textContent = message;\r\n-\r\n   // Append the current roll results to the diceResults container\r\n   const diceResultsContainer = document.getElementById('diceResults');\r\n   diceResultsContainer.appendChild(rollResultParagraph);\r\n \r\n   // Create an audio element for the dice sound\r\n   const diceSound = new Audio();\r\n   diceSound.src = 'sounds/dice.mp3';\r\n-  \r\n-  // Display individual rolls one by one with a delay, appending to the rollResultParagraph\r\n+\r\n+  // Display individual rolls one by one with a delay\r\n   let currentDelay = 500;\r\n   rolls.forEach((roll, index) => {\r\n-    setTimeout(() => {\r\n-      const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-      rollResultParagraph.textContent = `${message} for individual rolls: ${currentRolls}`;\r\n-      diceSound.play(); // Play sound effect with each roll\r\n-    }, currentDelay);\r\n-    currentDelay += 500; // Increment the delay for the next roll\r\n+      setTimeout(() => {\r\n+          const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+          rollResultParagraph.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n+          diceSound.play(); // Play sound effect with each roll\r\n+      }, currentDelay);\r\n+      currentDelay += 500; // Increment the delay for the next roll\r\n   });\r\n \r\n   // Display the final total roll after all individual rolls\r\n-setTimeout(() => {\r\n-  let finalMessage = `${message} for individual rolls: ${rolls.join(', ')} (Total: ${totalRoll})`;\r\n+  setTimeout(() => {\r\n+      let finalMessage = `${message} for individual rolls: ${rolls.join(', ')}`;\r\n \r\n-  if (numDice === 1 && dieType === 20) {\r\n-      if (rolls[0] === 1) {\r\n-          const criticalFailureSpan = document.createElement('p');\r\n-          criticalFailureSpan.className = 'critical-failure';\r\n-          criticalFailureSpan.textContent = ' - Critical Failure!';\r\n-          rollResultParagraph.appendChild(criticalFailureSpan);\r\n-      } else if (rolls[0] === 20) {\r\n-          const criticalSuccessSpan = document.createElement('p');\r\n-          criticalSuccessSpan.className = 'critical-success';\r\n-          criticalSuccessSpan.textContent = ' - Critical Success!';\r\n-          rollResultParagraph.appendChild(criticalSuccessSpan);\r\n+      if (numDice === 1 && dieType === 20) {\r\n+          if (rolls[0] === 1) {\r\n+              finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n+          } else if (rolls[0] === 20) {\r\n+              finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n+          }\r\n       }\r\n-  }\r\n \r\n-  rollResultParagraph.innerHTML = finalMessage;\r\n-}, currentDelay);\r\n+      finalMessage += ` (Total: ${totalRoll})`;\r\n+      rollResultParagraph.innerHTML = finalMessage;\r\n+  }, currentDelay + 500); // Wait a bit longer for the last message\r\n \r\n+  // Clear the modifier input after rolling\r\n+  modifierNumberInput.value = '';\r\n+\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692208350701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,82 +74,103 @@\n \r\n scaleImageOnHover();\r\n \r\n \r\n-document.querySelector('form').addEventListener('submit', function(event) {\r\n-  event.preventDefault(); // Prevent the form from submitting normally\r\n+document.addEventListener('DOMContentLoaded', function() {\r\n+  const diceResultsContainer = document.getElementById('diceResults');\r\n+  const clearButton = document.querySelector('[aria-label=\"Clear button\"]');\r\n \r\n-  const numDice = parseInt(document.getElementById('dieNum').value);\r\n-  const dieType = parseInt(document.getElementById('dieType').value);\r\n-  const modifierType = document.getElementById('modifierType').value;\r\n-  const modifierNumberInput = document.getElementById('modifierNumber');\r\n+  // Function to update Clear button visibility\r\n+  function updateClearButtonVisibility() {\r\n+      clearButton.style.display = diceResultsContainer.children.length > 0 ? 'block' : 'none';\r\n+  }\r\n \r\n-  let modifierNumber = 0; // Default value if no modifier is selected\r\n+  // Clear button click event\r\n+  clearButton.addEventListener('click', function() {\r\n+      diceResultsContainer.innerHTML = ''; // Clear the displayed results\r\n+      updateClearButtonVisibility(); // Update the Clear button visibility\r\n+  });\r\n \r\n-  // Parse modifierNumber only if a modifier is selected\r\n-  if (modifierType !== 'none') {\r\n-      modifierNumber = parseInt(modifierNumberInput.value);\r\n-  }\r\n+  // Dice rolling function\r\n+  document.querySelector('form').addEventListener('submit', function(event) {\r\n+      event.preventDefault(); // Prevent the form from submitting normally\r\n \r\n-  const rolls = []; // To store individual roll results\r\n-  let totalRoll = 0;\r\n+      const numDice = parseInt(document.getElementById('dieNum').value);\r\n+      const dieType = parseInt(document.getElementById('dieType').value);\r\n+      const modifierType = document.getElementById('modifierType').value;\r\n+      const modifierNumberInput = document.getElementById('modifierNumber');\r\n \r\n-  for (let i = 0; i < numDice; i++) {\r\n-      const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n-      rolls.push(rollResult); // Store individual roll result\r\n-      totalRoll += rollResult;\r\n-  }\r\n+      let modifierNumber = 0; // Default value if no modifier is selected\r\n \r\n-  if (modifierType === 'plus') {\r\n-      totalRoll += modifierNumber;\r\n-  } else if (modifierType === 'minus') {\r\n-      totalRoll -= modifierNumber;\r\n-  }\r\n+      // Parse modifierNumber only if a modifier is selected\r\n+      if (modifierType !== 'none') {\r\n+          modifierNumber = parseInt(modifierNumberInput.value);\r\n+      }\r\n \r\n-  // Construct the message including individual rolls and modifier information if applicable\r\n-  let message = `Rolling ${numDice} D${dieType}`;\r\n-  if (modifierType !== 'none') {\r\n-      message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n-  }\r\n+      const rolls = []; // To store individual roll results\r\n+      let totalRoll = 0;\r\n \r\n-  // Create a new <p> element to display the current roll results\r\n-  const rollResultParagraph = document.createElement('p');\r\n+      for (let i = 0; i < numDice; i++) {\r\n+          const rollResult = Math.floor(Math.random() * dieType) + 1;\r\n+          rolls.push(rollResult); // Store individual roll result\r\n+          totalRoll += rollResult;\r\n+      }\r\n \r\n-  // Append the current roll results to the diceResults container\r\n-  const diceResultsContainer = document.getElementById('diceResults');\r\n-  diceResultsContainer.appendChild(rollResultParagraph);\r\n+      if (modifierType === 'plus') {\r\n+          totalRoll += modifierNumber;\r\n+      } else if (modifierType === 'minus') {\r\n+          totalRoll -= modifierNumber;\r\n+      }\r\n \r\n-  // Create an audio element for the dice sound\r\n-  const diceSound = new Audio();\r\n-  diceSound.src = 'sounds/dice.mp3';\r\n+      // Construct the message including individual rolls and modifier information if applicable\r\n+      let message = `Rolling ${numDice} D${dieType}`;\r\n+      if (modifierType !== 'none') {\r\n+          message += ` with a modifier of ${modifierType} ${modifierNumber}`;\r\n+      }\r\n \r\n-  // Display individual rolls one by one with a delay\r\n-  let currentDelay = 500;\r\n-  rolls.forEach((roll, index) => {\r\n+      // Create a new <p> element to display the current roll results\r\n+      const rollResultParagraph = document.createElement('p');\r\n+\r\n+      // Append the current roll results to the diceResults container\r\n+      const diceResultsContainer = document.getElementById('diceResults');\r\n+      diceResultsContainer.appendChild(rollResultParagraph);\r\n+\r\n+      // Create an audio element for the dice sound\r\n+      const diceSound = new Audio();\r\n+      diceSound.src = 'sounds/dice.mp3';\r\n+\r\n+      // Display individual rolls one by one with a delay\r\n+      let currentDelay = 500;\r\n+      rolls.forEach((roll, index) => {\r\n+          setTimeout(() => {\r\n+              const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n+              rollResultParagraph.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n+              diceSound.play(); // Play sound effect with each roll\r\n+          }, currentDelay);\r\n+          currentDelay += 500; // Increment the delay for the next roll\r\n+      });\r\n+\r\n+      // Display the final total roll after all individual rolls\r\n       setTimeout(() => {\r\n-          const currentRolls = rolls.slice(0, index + 1).join(', ');\r\n-          rollResultParagraph.innerHTML = `${message} for individual rolls: ${currentRolls}`;\r\n-          diceSound.play(); // Play sound effect with each roll\r\n-      }, currentDelay);\r\n-      currentDelay += 500; // Increment the delay for the next roll\r\n-  });\r\n+          let finalMessage = `${message} for individual rolls: ${rolls.join(', ')}`;\r\n \r\n-  // Display the final total roll after all individual rolls\r\n-  setTimeout(() => {\r\n-      let finalMessage = `${message} for individual rolls: ${rolls.join(', ')}`;\r\n-\r\n-      if (numDice === 1 && dieType === 20) {\r\n-          if (rolls[0] === 1) {\r\n-              finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n-          } else if (rolls[0] === 20) {\r\n-              finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n+          if (numDice === 1 && dieType === 20) {\r\n+              if (rolls[0] === 1) {\r\n+                  finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n+              } else if (rolls[0] === 20) {\r\n+                  finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n+              }\r\n           }\r\n-      }\r\n \r\n-      finalMessage += ` (Total: ${totalRoll})`;\r\n-      rollResultParagraph.innerHTML = finalMessage;\r\n-  }, currentDelay + 500); // Wait a bit longer for the last message\r\n+          finalMessage += ` (Total: ${totalRoll})`;\r\n+          rollResultParagraph.innerHTML = finalMessage;\r\n \r\n-  // Clear the modifier input after rolling\r\n-  modifierNumberInput.value = '';\r\n+          // After displaying results, update Clear button visibility\r\n+          updateClearButtonVisibility();\r\n+      }, currentDelay + 500); // Wait a bit longer for the last message\r\n \r\n+      // Clear the modifier input after rolling\r\n+      modifierNumberInput.value = '';\r\n+\r\n+  });\r\n+\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692209156668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,10 +155,12 @@\n \r\n           if (numDice === 1 && dieType === 20) {\r\n               if (rolls[0] === 1) {\r\n                   finalMessage += '<span class=\"critical-failure\"> - Critical Failure!</span>';\r\n+                  criticalFailureSound.play();\r\n               } else if (rolls[0] === 20) {\r\n                   finalMessage += '<span class=\"critical-success\"> - Critical Success!</span>';\r\n+                  criticalSuccessSound.play();\r\n               }\r\n           }\r\n \r\n           finalMessage += ` (Total: ${totalRoll})`;\r\n"
                }
            ],
            "date": 1690828708265,
            "name": "Commit-0",
            "content": "function goToTop() {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }"
        }
    ]
}